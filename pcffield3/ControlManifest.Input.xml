<?xml version="1.0" encoding="utf-8" ?>
<manifest>
  <control namespace="propcf" constructor="pcffield3" version="0.0.6" display-name-key="pcffield3" description-key="pcffield3 description" control-type="standard" >
    <type-group name="strings">
      <type>SingleLine.Text</type>
      <type>SingleLine.Email</type>
      <type>SingleLine.Phone</type>
      <type>SingleLine.TextArea</type>
      <type>SingleLine.Ticker</type>
      <type>SingleLine.URL</type>
      <type>Multiple</type>
    </type-group>
    <type-group name="dates">
      <type>DateAndTime.DateAndTime</type>
      <type>DateAndTime.DateOnly</type>
    </type-group>
    <type-group name="numbers">
      <type>Whole.None</type>
      <type>Currency</type>
      <type>FP</type>
      <type>Decimal</type>
    </type-group>    
    <!--external-service-usage node declares whether this 3rd party PCF control is using external service or not, if yes, this control will be considered as premium and please also add the external domain it is using.
    If it is not using any external service, please set the enabled="false" and DO NOT add any domain below. The "enabled" will be false by default.
    Example1:
      <external-service-usage enabled="true">
        <domain>www.Microsoft.com</domain>
      </external-service-usage>
    Example2:
      <external-service-usage enabled="false">
      </external-service-usage>
    -->
    <external-service-usage enabled="false">
      <!--UNCOMMENT TO ADD EXTERNAL DOMAINS
      <domain></domain>
      <domain></domain>
      -->
    </external-service-usage>
    <!-- property node identifies a specific, configurable piece of data that the control expects from CDS -->
    <property
      name="textField" 
      display-name-key="Text Field"
      description-key="Text Field"
      of-type-group="strings"
      usage="bound"
      required="true" />
    <property
      name="inputField"
      display-name-key="Input Text Field" 
      description-key="Input Text Field"
      of-type-group="strings"
      usage="input"
      required="false" />
    <property name="textField2" display-name-key="Text Field 2" description-key="Text Field 2" of-type-group="strings" usage="bound" required="false" />
    <property name="numberField" display-name-key="Number Field" description-key="Number Field" of-type-group="numbers" usage="bound" required="false" />
    <property name="dateField" display-name-key="Date Field" description-key="Date Field" of-type-group="dates" usage="bound" required="false" />
    <property name="optionSetField" display-name-key="OptionSet Field" description-key="Date Field" of-type="OptionSet" usage="bound" required="false" />
    <!--
      Property node's of-type attribute can be of-type-group attribute.
      Example:
      <type-group name="numbers">
        <type>Whole.None</type>
        <type>Currency</type>
        <type>FP</type>
        <type>Decimal</type>
      </type-group>
      <property name="sampleProperty" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type-group="numbers" usage="bound" required="true" />
    -->
    <resources>
      <code path="index.ts" order="1"/>
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/pcffield3.css" order="1" />
      <resx path="strings/pcffield3.1033.resx" version="1.0.0" />
      -->
    </resources>

    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
   
  </control>
</manifest>
